---
# defaults file for waal70.paperless-ngx
auth_token: "auth_token_in_vaulted vars"
# If you run this on the host where paperless-ngx is running, this should be localhost
ppl_base: "http://localhost:8010"
ppl_endpoint: "{{ ppl_base }}/api/"

mail_token: "tokengoeshere"
mail_imap: "imap.gmail.com"
mail_imap_port: 993
# If you don't put an @-symbol here, the playbook will skip e-mail config
mail_username: "emailadress"
mail_name: "name for the account"

delete_all_doc_types: false
cleansetag: "is_cleansed"
# Switch to false to enable the cleansing of titles based on the rules in cleanse_doc_titles.yml
cleanse_titles: true

# Please make sure to put the correct credentials in /media/.<type>creds
cifs_consume_path: "/mountpointhere"
cifs_consume_src: "//server/shareconsume"
cifs_export_path: "/mountpointexport"
cifs_export_src: "//server/shareexport"

ppl_user: "ppl"
ppl_password: "ppl"
ppl_dbpassword: "paperlessdb"
# This controls rolling out the config
ppl_do_config: true
# This controls the making of a database export
ppl_export: false
# This controls whether to make the cron job for the export
ppl_export_schedule: true
# The command to export. Please note that import can be done on an empty ppl instance
# You can then use: docker exec -it ppl-web document_importer ../export
# Should you not have exported thumbnails (-nt), you can regenerate them through:
# docker exec -it ppl-web document_thumbnails
ppl_export_cmd: "document_exporter -p -f -nt -d ../export"

ppl_domain: "yourdomain.here" # without http(s):// and without a trailing slash

doc_types: [
  ["Type1", 6],
  ["Type2", 6]
]

correspondents: [
  ["Corr1", 6],
  ["Corr2", 6]
]

# Please note that tags_main.yml sets a specific INBOX tag!
ppl_tags: [
  ["Tag1", "#302d86"],
  ["Tag2", "#302d86"]
]

storagepaths: [
  ["SP1", "PATH_ONE/{{ '{{' }} created_year {{ '}}' }}/"],
  ["SP2", "PATH_TWO/AnotherFolder/{{ '{{' }} created_year {{ '}}' }}/"]
]
# These workflows follow the name value pair type of variable and trigger on "consumption started = type"
# ["workflow_name", "filter_path", "assign_doc_type", "assign_correspondent", "assign_storage_path"]
# Please note the required referential integrity with the values above!
consumption_workflows: [
  ["CWF_1", "*/foldertomatch/*", "Type1", "Corr1", "SP1"],
  ["CWF_2", "*/anotherfolder/*", "Type2", "Corr1", "SP2"]
]

consumption_workflow_corr: [
  ["CWC_1", "*filename*match*", "Corr1"]
]

tagging_workflows: [
  ["TWF_1", "*stringintitle*", "Tag1"],
  ["TWF_2", "*otherstring*", "Tag2"]
]
